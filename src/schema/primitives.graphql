type BatchPayload {
    count: Int
}

type AuthenticationPayload {
    user: User
    token: String!
}

enum UserGroup {
    """
    System Administrator
    """
    Admin
    """
    Authenticated User
    """
    User
}

type File @model {
    id: ID!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    name: String!
    mimeType: String!
    path: String! @unique
}

"""
This is a description of a User
"""
type User
    @model
    @authorization(
        READ: "$user.group = Editor || $user.id = $this.id"
        CREATE: "true"
        UPDATE: "$user.group = Editor || $user.id = $this.id"
        DELETE: "$user.group = Editor || $user.id = $this.id"
    ) {
    id: ID!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    email: EmailAddress! @unique
    password: Password! @validation(length: { min: 12, max: 25 })
    group: UserGroup!
    name: String!
    family: String!
    avatar: File @upload(accept: "imagee/*", size: { max: "5MB", min: "10KB" })
}
