extend enum UserGroup {
    Editor
    Author
}

"""
This is a description of a Post
"""
type Post
    @model
    @authorization(
        READ: "$this.published || $user.group = Editor || $user.id = $this.author"
        CREATE: "$user.group in [Editor, Author]"
        UPDATE: "$user.group = Editor || $user.id = $this.author"
        DELETE: "$user.group = Editor || $user.id = $this.author"
    ) {
    id: ID!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    author: User! @relation(type: "many-to-one")
    title: String!
    content: String!
    published: Boolean! @default(value: false) @authorization(READ: "$user.group in [Editor, Author]")
    categories: [Category] @relation(type: "many-to-many")
}

"""
This is a description of a Category
"""
type Category
    @model
    @authorization(
        READ: "true"
        CREATE: "$user.group = Editor"
        UPDATE: "$user.group = Editor"
        DELETE: "$user.group = Editor"
    ) {
    id: ID!
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    name: String!
    posts: [Post] @relation(type: "many-to-many")
}
